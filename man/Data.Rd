% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{class}
\name{Data}
\alias{Data}
\title{R6 class that contains and manipulates framework data.}
\format{
\code{\link{R6Class}} object.
}
\value{
A vector of export data list names

A data list data object (normally data frame)

Count of the number of non-responses by the respondent.

Count of the number of non-responses by the respondent.

The signifier ID associated with the column name else NULL

the filtered data frame (note: the internal dataframe list will be also updated in accordance with whether data_frames or data_name passed)
}
\description{
The `data` class is the primary class for
representing a framework's data. it will either download or receive the
framework data, then perform transformations and extensions, including creating
title versions, new columns for %age dyads, transform stone and triad data to absolute
proportion from %age values, add zones and if requested add frameworkr metadata.
If there is a dashboard requested it will combine data if a combined dashboard, update
frameworkr with additional signifier definitions and combine and filter data where appropriate.data
}
\examples{
# The package vignettes include extensive examples of working with the
# data class.
library(sensemakerdatar)
my_fw <- signifiers$new("mydir/projectFramework.json", NULL, NULL, NULL)
fw_triads <- self$get_signifier_ids_by_type("triad")
triad_01_image <- pt$get_triad_background_image(fw_triads[[1]])
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{export_data_list_names}}{List of the data list names that are standard export data frames. NOTE - this will be user (coder) extensible}

\item{\code{is_invalid}}{Boolean - TRUE if the attempt is invalid}

\item{\code{has_zero_records}}{Boolean - TRUE if the data retrieval returns no records}

\item{\code{demonstrator}}{Boolean - TRUE if the token is a demonstrator account.}

\item{\code{data}}{The full list of data objects keyed by the name of the field. NOTE - this will be user (coder) extensible}

\item{\code{stone_ratios}}{Stone ratios of each of the stone canvases}

\item{\code{sm_framework}}{the framework definition}

\item{\code{framework_definition_json}}{The framework json for non-dashboard or dashbpard parent}

\item{\code{dashboard_definition_v1}}{The dashboard json for version 1 because we need to do work with it after declaring it}

\item{\code{dashboard_definition_v2}}{The dashboard json for version 2 because we need to do work with it after declaring it}

\item{\code{dashboard_layout_v2}}{The dashboard layout json for version 2 because we need to do work with it after declaring it}

\item{\code{dashboard_filters_v2}}{The dashboard filters json for version 2 because we need to do work with it after declaring it}

\item{\code{framework_id}}{The framework id, if a dashboard, the underlying main framework id for dashboard}

\item{\code{framework_title}}{The title of the framework (dashboard will take the underlying framework title)}

\item{\code{dashboard_id}}{The dashboard id}

\item{\code{dashboard_title}}{The title of the dashboard}

\item{\code{dashboard_combined_frameworks_names}}{Named vector of the combined dashboard frameworks. Names with ids as list title}

\item{\code{dashboard_combined_frameworks_ids}}{reverse of above. ids as content, titles as names}

\item{\code{dashboard_version}}{The dashboard version - whether 1 or 2}

\item{\code{polymorphic_definition_json}}{The jsonlite package parsed json for polymorphic definitions if they exist}

\item{\code{polymorphic_signifiers}}{The parsed jsonlite package parsed json for polymorphic definitions if they exist}

\item{\code{has_polymorphic_signifiers}}{The parsed framework has polymorphic signifieres}

\item{\code{fragment_level_upload}}{dataframe of fragment level list updates to data}

\item{\code{FK_level_upload}}{dataframe of fragment level list updates to data}

\item{\code{stop_words}}{- stop words specific to this framework to use in any NLP requirements.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Data-new}{\code{Data$new()}}
\item \href{#method-Data-add_stop_words}{\code{Data$add_stop_words()}}
\item \href{#method-Data-add_export_data_list_names}{\code{Data$add_export_data_list_names()}}
\item \href{#method-Data-add_data_data_frame}{\code{Data$add_data_data_frame()}}
\item \href{#method-Data-get_data_list_names}{\code{Data$get_data_list_names()}}
\item \href{#method-Data-get_export_data_list_names}{\code{Data$get_export_data_list_names()}}
\item \href{#method-Data-get_data_dataframe}{\code{Data$get_data_dataframe()}}
\item \href{#method-Data-get_not_responded_count}{\code{Data$get_not_responded_count()}}
\item \href{#method-Data-get_not_applicable_count}{\code{Data$get_not_applicable_count()}}
\item \href{#method-Data-get_signifier_id_from_column_name}{\code{Data$get_signifier_id_from_column_name()}}
\item \href{#method-Data-is_demonstrator}{\code{Data$is_demonstrator()}}
\item \href{#method-Data-is_dashboard}{\code{Data$is_dashboard()}}
\item \href{#method-Data-get_dashboard_definition}{\code{Data$get_dashboard_definition()}}
\item \href{#method-Data-is_combined_dashboard}{\code{Data$is_combined_dashboard()}}
\item \href{#method-Data-dashboard_has_filters}{\code{Data$dashboard_has_filters()}}
\item \href{#method-Data-get_dashboard_version}{\code{Data$get_dashboard_version()}}
\item \href{#method-Data-get_dashboard_combined_mappings}{\code{Data$get_dashboard_combined_mappings()}}
\item \href{#method-Data-get_framework_id}{\code{Data$get_framework_id()}}
\item \href{#method-Data-get_framework_title}{\code{Data$get_framework_title()}}
\item \href{#method-Data-get_dashboard_id}{\code{Data$get_dashboard_id()}}
\item \href{#method-Data-get_dashboard_title}{\code{Data$get_dashboard_title()}}
\item \href{#method-Data-get_combined_dashboard_frameworks_for_dropdown}{\code{Data$get_combined_dashboard_frameworks_for_dropdown()}}
\item \href{#method-Data-get_framework_data_names}{\code{Data$get_framework_data_names()}}
\item \href{#method-Data-get_df1_data}{\code{Data$get_df1_data()}}
\item \href{#method-Data-get_dat_data}{\code{Data$get_dat_data()}}
\item \href{#method-Data-get_df_keep_data}{\code{Data$get_df_keep_data()}}
\item \href{#method-Data-get_df_multi_select_data}{\code{Data$get_df_multi_select_data()}}
\item \href{#method-Data-get_df_multi_select_full_data}{\code{Data$get_df_multi_select_full_data()}}
\item \href{#method-Data-get_stone_data_data}{\code{Data$get_stone_data_data()}}
\item \href{#method-Data-get_stones_ratio}{\code{Data$get_stones_ratio()}}
\item \href{#method-Data-get_title_data_data}{\code{Data$get_title_data_data()}}
\item \href{#method-Data-get_title_use_data}{\code{Data$get_title_use_data()}}
\item \href{#method-Data-get_sm_framework}{\code{Data$get_sm_framework()}}
\item \href{#method-Data-get_framework_definition_json}{\code{Data$get_framework_definition_json()}}
\item \href{#method-Data-get_dashboard_definition_json}{\code{Data$get_dashboard_definition_json()}}
\item \href{#method-Data-get_dashboard_layout_json}{\code{Data$get_dashboard_layout_json()}}
\item \href{#method-Data-get_dashboard_filters_json}{\code{Data$get_dashboard_filters_json()}}
\item \href{#method-Data-get_dashboard_combined_frameworks_names}{\code{Data$get_dashboard_combined_frameworks_names()}}
\item \href{#method-Data-get_dashboard_combined_frameworks_ids}{\code{Data$get_dashboard_combined_frameworks_ids()}}
\item \href{#method-Data-get_has_polymorphic_signifiers}{\code{Data$get_has_polymorphic_signifiers()}}
\item \href{#method-Data-get_polymorphic_signifiers}{\code{Data$get_polymorphic_signifiers()}}
\item \href{#method-Data-add_accumulation_data}{\code{Data$add_accumulation_data()}}
\item \href{#method-Data-execute_queries}{\code{Data$execute_queries()}}
\item \href{#method-Data-execute_data_query}{\code{Data$execute_data_query()}}
\item \href{#method-Data-clone}{\code{Data$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-new"></a>}}
\if{latex}{\out{\hypertarget{method-Data-new}{}}}
\subsection{Method \code{new()}}{
Create a new `data` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$new(
  csvfilename = "",
  csvfiledf = "",
  framework_id = "",
  dashboard_id = "",
  token = "",
  sensemakerframeworkrobject = "",
  polymorphic_definition_json = "",
  fragment_level_csv = "",
  fragment_level_parsed = "",
  FK_level_csv = "",
  FK_level_parsed = "",
  upload_na_identifier = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{csvfilename}}{if loading directly from a pre-existing csv file on disk. The file is an id, not label/title file.}

\item{\code{csvfiledf}}{if passing in an already read csv file data frame.}

\item{\code{framework_id}}{The id of the framework to load.}

\item{\code{dashboard_id}}{The id of the dashboard to load (if framework or dashboard id passed, only one not the other must be non NULL).}

\item{\code{token}}{if using the platform security, the token to gain access to the data. Used only when framework_id or dashboard_id passed.}

\item{\code{sensemakerframeworkrobject}}{- optional sensemakerframeworkr R6 class object which would be added to based on data loaded (e.g. meta columns)}

\item{\code{polymorphic_definition_json}}{- jsonlite parsed json file of the polymorphic definition - default blank}

\item{\code{fragment_level_csv}}{- a csv file containing fragment level additional data columns to add to the dataset and define as list items for analysis}

\item{\code{fragment_level_parsed}}{- an already parsed (read) csv as fragment level additional data columns}

\item{\code{FK_level_csv}}{- a csv file containing additional data columns linked by a FK - i.e. the id values of a signifier other than the fragmentID - e.g. county linked to city id}

\item{\code{FK_level_parsed}}{- an already parsed (read) csv as additional data columns linked by FK}

\item{\code{upload_na_identifier}}{- The identifier in the csv files for NA values - this should be consistent through all files. Typically "" or "NA"}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The csv is downloaded or passed or read and processed to prepare data for analytical work
}

\subsection{Returns}{
A new `signifier` R6 class object and fields type by signifier id, signifier ids by type, and
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-add_stop_words"></a>}}
\if{latex}{\out{\hypertarget{method-Data-add_stop_words}{}}}
\subsection{Method \code{add_stop_words()}}{
Add stop words associated with the fragments in this framework data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$add_stop_words(stop_words, add_replace = "replace")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stop_words}}{- A vector of stopwords, setting to NULL will clear the stop_list}

\item{\code{add_replace}}{- default "replace". "append" or "replace" any stopwords previously added.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-add_export_data_list_names"></a>}}
\if{latex}{\out{\hypertarget{method-Data-add_export_data_list_names}{}}}
\subsection{Method \code{add_export_data_list_names()}}{
Add a new data frame name to the export data list names. These are the data frames in list "data" that are
standard export format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$add_export_data_list_names(new_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_name}}{- the name of a new data frame}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-add_data_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-Data-add_data_data_frame}{}}}
\subsection{Method \code{add_data_data_frame()}}{
Add a new data frame name to the data list object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$add_data_data_frame(data_frame, name, add_to_export_list_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_frame}}{- the data frame to add}

\item{\code{name}}{- the name to give the data frame in the data list.}

\item{\code{add_to_export_list_names}}{- if this is a standard data data frame then whether to add to the}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_data_list_names"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_data_list_names}{}}}
\subsection{Method \code{get_data_list_names()}}{
get the data lists names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_data_list_names(export_only = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{export_only}}{default FALSE, if TRUE return only those that are in the export list names
These are names of data entries that are standard SM data frames}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_export_data_list_names"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_export_data_list_names}{}}}
\subsection{Method \code{get_export_data_list_names()}}{
get the data list names that are standard export data data frames
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_export_data_list_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_data_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_data_dataframe}{}}}
\subsection{Method \code{get_data_dataframe()}}{
get the data object (data frame) from data list object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_data_dataframe(name, as_tibble = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{- the data list name to return (for names use "get_export_data_list_names function}

\item{\code{as_tibble}}{- default FALSE, if TRUE, export as a tidyverse tibble object.
for those that are standard export data frames or get_data_list_names function for all of them)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_not_responded_count"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_not_responded_count}{}}}
\subsection{Method \code{get_not_responded_count()}}{
get the data count of those responends not responding to a signifier. If the signifier is required then count is zero.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_not_responded_count(df_name = "dat", sig_id = NULL, col_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df_name}}{- Default "dat", one of the data frames in the export data list (get_export_data_list_names method)}

\item{\code{sig_id}}{- Default NULL, a signifier id from the framework. Either this or the col_name must be provided.}

\item{\code{col_name}}{- Default NULL, a column name from the data. Either this or the sig_id must be provided}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_not_applicable_count"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_not_applicable_count}{}}}
\subsection{Method \code{get_not_applicable_count()}}{
get the data count of those responends not responding to a signifier. If the signifier is required then count is zero.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_not_applicable_count(df_name = "dat", sig_id = NULL, col_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df_name}}{- Default "dat", one of the data frames in the export data list (get_export_data_list_names method)}

\item{\code{sig_id}}{- Default NULL, a signifier id from the framework. Either this or the col_name must be provided.}

\item{\code{col_name}}{- Default NULL, a column name from the data. Either this or the sig_id must be provided}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_signifier_id_from_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_signifier_id_from_column_name}{}}}
\subsection{Method \code{get_signifier_id_from_column_name()}}{
get the signifier ID from a signifier/zone etc column name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_signifier_id_from_column_name(col_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{col_name}}{- Column name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-is_demonstrator"></a>}}
\if{latex}{\out{\hypertarget{method-Data-is_demonstrator}{}}}
\subsection{Method \code{is_demonstrator()}}{
is the account accessing this framework a demonstrator account, TRUE or FALSE.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$is_demonstrator()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE or FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-is_dashboard"></a>}}
\if{latex}{\out{\hypertarget{method-Data-is_dashboard}{}}}
\subsection{Method \code{is_dashboard()}}{
is the definition being accessed a dashboard, TRUE or FALSE.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$is_dashboard()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE or FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_definition"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_definition}{}}}
\subsection{Method \code{get_dashboard_definition()}}{
get the dashboard parsed json definition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_definition()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The parsed dashboard definition
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-is_combined_dashboard"></a>}}
\if{latex}{\out{\hypertarget{method-Data-is_combined_dashboard}{}}}
\subsection{Method \code{is_combined_dashboard()}}{
get wheter the dashboard is a combined dashboard or not, TRUE or FALSE.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$is_combined_dashboard()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE or FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-dashboard_has_filters"></a>}}
\if{latex}{\out{\hypertarget{method-Data-dashboard_has_filters}{}}}
\subsection{Method \code{dashboard_has_filters()}}{
get whether the dashboard is a combined dashboard or not, TRUE or FALSE.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$dashboard_has_filters()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE or FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_version"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_version}{}}}
\subsection{Method \code{get_dashboard_version()}}{
Get the dashboard version.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_version()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
v1 or v2
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_combined_mappings"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_combined_mappings}{}}}
\subsection{Method \code{get_dashboard_combined_mappings()}}{
Get the dashboard combined signifier mappings if it is a combined dashboard
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_combined_mappings()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Parsed json of the signifier mapping specifications
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_framework_id"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_framework_id}{}}}
\subsection{Method \code{get_framework_id()}}{
Get the framework_id (if a dashboard, the framework id will be different to the dashboard id passed in)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_framework_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The framework id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_framework_title"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_framework_title}{}}}
\subsection{Method \code{get_framework_title()}}{
Get the framework title (if a dashboard, the framework title will be different to the dashboard title)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_framework_title()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The framework id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_id"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_id}{}}}
\subsection{Method \code{get_dashboard_id()}}{
Get the dashboard id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dashboard id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_title"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_title}{}}}
\subsection{Method \code{get_dashboard_title()}}{
Get the dashboard title
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_title()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dashboard title
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_combined_dashboard_frameworks_for_dropdown"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_combined_dashboard_frameworks_for_dropdown}{}}}
\subsection{Method \code{get_combined_dashboard_frameworks_for_dropdown()}}{
Get the names and ids for the frameworks making up the combined dashboard
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_combined_dashboard_frameworks_for_dropdown(
  include_id = TRUE,
  only_id = FALSE,
  include_parent = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_id}}{- if TRUE, return the ids as the list elements (Default TRUE)}

\item{\code{only_id}}{- if TRUE, return the ids and not the names (as list names)}

\item{\code{include_parent}}{- if TRUE, incudes the parent framework along with the combined ones .}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of framework ids with title as names (or vector of ids if only_id TRUE)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_framework_data_names"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_framework_data_names}{}}}
\subsection{Method \code{get_framework_data_names()}}{
Get the data entry names (names in the data field)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_framework_data_names(return_type = "system")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{return_type}}{"system" returns on the systemm ones, "user" only the user defined, "both" both}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The names in the data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_df1_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_df1_data}{}}}
\subsection{Method \code{get_df1_data()}}{
Get the df1 data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_df1_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The df1 data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dat_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dat_data}{}}}
\subsection{Method \code{get_dat_data()}}{
Get the dat data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dat_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dat data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_df_keep_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_df_keep_data}{}}}
\subsection{Method \code{get_df_keep_data()}}{
Get the df_keep data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_df_keep_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The df_keep data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_df_multi_select_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_df_multi_select_data}{}}}
\subsection{Method \code{get_df_multi_select_data()}}{
Get the df_multi_select data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_df_multi_select_data(id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- the mcq to be returned. Optional, NULL will bring back all MCQs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The df_multi_select data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_df_multi_select_full_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_df_multi_select_full_data}{}}}
\subsection{Method \code{get_df_multi_select_full_data()}}{
Get the df_multi_select_full data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_df_multi_select_full_data(id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- the mcq to be returned. Optional, NULL will bring back all MCQs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of data frames if id is NULL otherwise a single data frame for the passed in id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_stone_data_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_stone_data_data}{}}}
\subsection{Method \code{get_stone_data_data()}}{
Get the stone_data data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_stone_data_data(id = NULL, include_id = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Stone ID to return - defalt NULL, return all}

\item{\code{include_id}}{default FALSE, TRUE to return ID as names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of stone data frames
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_stones_ratio"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_stones_ratio}{}}}
\subsection{Method \code{get_stones_ratio()}}{
Get the stone_data data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_stones_ratio(stones_id = "", include_ids = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stones_id}}{vector of stone IDs to return stone data}

\item{\code{include_ids}}{if TRUE returns stoneID as return list name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The list of stone ratios
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_title_data_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_title_data_data}{}}}
\subsection{Method \code{get_title_data_data()}}{
Get the title_data data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_title_data_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The title_data data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_title_use_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_title_use_data}{}}}
\subsection{Method \code{get_title_use_data()}}{
Get the title_use data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_title_use_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The title_use data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_sm_framework"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_sm_framework}{}}}
\subsection{Method \code{get_sm_framework()}}{
Get the title_use data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_sm_framework()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The title_use data data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_framework_definition_json"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_framework_definition_json}{}}}
\subsection{Method \code{get_framework_definition_json()}}{
Get the framework definition parsed json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_framework_definition_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The framework definition parsed json
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_definition_json"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_definition_json}{}}}
\subsection{Method \code{get_dashboard_definition_json()}}{
Get the dashboard definition parsed json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_definition_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dashboard definition parsed json
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_layout_json"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_layout_json}{}}}
\subsection{Method \code{get_dashboard_layout_json()}}{
Get the dashboard layout parsed json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_layout_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dashboard layout parsed json
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_filters_json"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_filters_json}{}}}
\subsection{Method \code{get_dashboard_filters_json()}}{
Get the dashboard layout parsed json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_filters_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The dashboard layout parsed json
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_combined_frameworks_names"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_combined_frameworks_names}{}}}
\subsection{Method \code{get_dashboard_combined_frameworks_names()}}{
Get the dashboard combined frameworks names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_combined_frameworks_names(include_ids = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_ids}}{if TRUE return the framework ids as the list names, defaults to FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The dashboard combined framework names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_dashboard_combined_frameworks_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_dashboard_combined_frameworks_ids}{}}}
\subsection{Method \code{get_dashboard_combined_frameworks_ids()}}{
Get the dashboard combined frameworks ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_dashboard_combined_frameworks_ids(include_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{if TRUE return the framework names as the list names, defaults to FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The dashboard combined framework ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_has_polymorphic_signifiers"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_has_polymorphic_signifiers}{}}}
\subsection{Method \code{get_has_polymorphic_signifiers()}}{
Get whether the framework has polymorphic signifiers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_has_polymorphic_signifiers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if framework has polymorphic signifiers otherwise FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-get_polymorphic_signifiers"></a>}}
\if{latex}{\out{\hypertarget{method-Data-get_polymorphic_signifiers}{}}}
\subsection{Method \code{get_polymorphic_signifiers()}}{
Get the polymorphic signifiers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$get_polymorphic_signifiers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Parsed JSON file of the polymorphic signifier definitions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-add_accumulation_data"></a>}}
\if{latex}{\out{\hypertarget{method-Data-add_accumulation_data}{}}}
\subsection{Method \code{add_accumulation_data()}}{
Create an accumulated data set based on specified column (default to EntryYrMth) for animation graphics.
This method creates a side effect by adding a new data frame to the data field list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$add_accumulation_data(df_name, col_name = "EntryYrMth", data_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df_name}}{The name of the data frame to use to accumulate the data.}

\item{\code{col_name}}{The column name to accumulate on. Defaults to EntryYrMth}

\item{\code{data_name}}{The data list name to hold the data. Defaults to NULL in which case the name will be a paste of "accumulate_" and the data_name and col_name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-execute_queries"></a>}}
\if{latex}{\out{\hypertarget{method-Data-execute_queries}{}}}
\subsection{Method \code{execute_queries()}}{
Executes a list of queryies on the database and either updates existing data frames or adds a new one
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$execute_queries(query_file = NULL, queries = NULL, data_names = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query_file}}{- default NULL. A file with columns containing at least "name" and "expression" and "include"}

\item{\code{queries}}{- a vector of the queries to execute. In double quotes so internal quotes to be single.}

\item{\code{data_names}}{- The names of the new data list data frame entries A vector the same length as queries}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-execute_data_query"></a>}}
\if{latex}{\out{\hypertarget{method-Data-execute_data_query}{}}}
\subsection{Method \code{execute_data_query()}}{
Executes a query on the database and either updates existing data frames or adds a new one
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$execute_data_query(query, data_frames = NULL, data_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{- the query to execute. In double quotes so internal quotes to be single.}

\item{\code{data_frames}}{- default NULL, values "ALL" or a list of data names in the data list.}

\item{\code{data_name}}{- default NULL, the name of the new data list data frame entry if query to create a new entry}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Data-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Data-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
